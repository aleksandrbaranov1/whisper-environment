version: "3.9"

services:
  db:
    image: postgres:16
    container_name: whisper-environment-db-1
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000
      POSTGRES_DB: whisperdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d whisperdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  redis:
    image: redis:7
    container_name: whisper-environment-redis-1
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - internal

  backend:
    build:
      context: ./Whisper
    container_name: whisper-environment-backend-1
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/whisperdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 0000
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    networks:
      - internal

  nginx:
    build:
      context: .
      dockerfile: ./NGINX/Dockerfile
    container_name: whisper-environment-nginx-1
    restart: always
    depends_on:
      backend:
        condition: service_started
    ports:
      - "80:80"
    networks:
      - internal
      - public

volumes:
  pgdata:

networks:
  internal:
    driver: bridge
    name: whisper_internal
  public:
    driver: bridge
    name: whisper_public
